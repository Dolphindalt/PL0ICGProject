program -> block .
block -> const_declaration var_declaration proceduret statement
const_declaration -> const ident = number const_declaration_list ;
const_declaration ->
const_declaration_list -> , ident = number const_declaration_list
const_declaration_list ->
var_declaration -> var ident var_declaration_list ;
var_declaration ->
var_declaration_list -> , ident var_declaration_list
var_declaration_list ->
proceduret -> procedure ident ; block ; procedure_tail
proceduret ->
procedure_tail -> procedure ident ; block ; procedure_tail
procedure_tail ->
statement -> ident := expression
statement -> call ident
statement -> ? ident
statement -> ! expression
statement -> begin statement statement_tail end
statement -> if condition then statement
statement -> while condition do statement
statement ->
statement_tail -> ; statement statement_tail
statement_tail ->
condition -> odd expression
condition -> expression = expression
condition -> expression # expression
condition -> expression < expression
condition -> expression <= expression
condition -> expression > expression
condition -> expression >= expression
expression -> + term expression_tail
expression -> - term expression_tail
expression -> term expression_tail
expression_tail -> + term expression_tail
expression_tail -> - term expression_tail
expression_tail ->
term -> factor term_tail
term_tail -> * factor term_tail
term_tail -> / factor term_tail
term_tail ->
factor -> ident
factor -> number
factor -> ( expression )